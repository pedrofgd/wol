var h=Object.defineProperty;var p=(t,e,r)=>e in t?h(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var o=(t,e,r)=>p(t,typeof e!="symbol"?e+"":e,r);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function r(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(n){if(n.ep)return;n.ep=!0;const s=r(n);fetch(n.href,s)}})();Date.prototype.addDays=function(t){var e=new Date(this.valueOf());return e.setDate(e.getDate()+t),e};Date.prototype.addYears=function(t){var e=new Date(this.valueOf());return e.setFullYear(e.getFullYear()+t),e};Date.prototype.getMonthPretty=function(){var t=new Date(this.valueOf()),e=t.getMonth()+1;return("0"+e).slice(-2)};Date.prototype.weeksUntil=function(t){return Math.round((t.getTime()-this.getTime())/6048e5)};class f{constructor(e,r,i){o(this,"element");o(this,"label");o(this,"warning");this.element=e,this.label=r,this.warning=i}build(e){if(!e){this._setWarning();return}const r=new Date,i=new Date(e.birthday);this._setLabel(e.name),this._clear();for(let n=0;n<e.weeks;n++){const s=i.addDays(7*(n+1));let a=document.createElement("div");a.id=`${s.getFullYear()}-${s.getMonthPretty()}-${s.getDate()}`,a.classList.add("week-square"),s<r&&a.classList.add("past"),this.element.appendChild(a)}}_setWarning(){this.element.innerHTML="",this.warning.innerHTML="Nothing to display"}_clear(){this.element.innerHTML="",this.warning.innerHTML=""}_setLabel(e){this.label.innerHTML=e}}const d="yup";function l(){try{const t=localStorage.getItem(d);return t?JSON.parse(t).map(e=>c.fromJSON(e)):[]}catch(t){return console.log("Failed to parse persons from local storage with error:",t),[]}}function m(t){const e=l();e.push(t),localStorage.setItem(d,JSON.stringify(e))}function y(t){try{return JSON.parse(t)?(localStorage.setItem(d,t),!0):!1}catch{return console.log("Failed to import definitions with input:",t),!1}}class c{constructor(e,r,i){o(this,"name");o(this,"birthday");o(this,"maxage");o(this,"weeks");this.name=e,this.birthday=r,this.maxage=i;const n=r.addYears(i);this.weeks=r.weeksUntil(n)}static fromJSON(e){if(!e||!e.name||!e.birthday||!e.maxage)throw Error("Invalid input for type Person:"+e);return new c(e.name,new Date(e.birthday),e.maxage)}}function g(){try{const e=b(),r=w(),i=v();var t=new c(e,r,i);return m(t),t}catch(e){return console.log("ERR - failed to add person with:",e),null}}function b(){const t=prompt("Name","Bob");if(!t)throw alert("Invalid input. Please provide the correct name"),Error("Invalid name");return t}function w(){const t=prompt("Birthday","yyyy-mm-dd");if(!t||isNaN(Date.parse(t)))throw alert("Invalid input. Please provide the correct birthday date"),Error("Invalid birthday");return new Date(t)}function v(){const t=prompt("Life expectancy","80");if(!t||isNaN(parseInt(t)))throw alert("Invalid input. Please provide correct life expectancy"),Error("Invalid life expectancy");return+t}class P{constructor(e,r){o(this,"element");o(this,"button");o(this,"persons");o(this,"activePerson");o(this,"observers");this.element=e,this.button=r,this.persons=l(),this.observers=[]}build(){this._load(),this._setupButton()}subscribe(e){this.observers.push(e)}notifyAll(e){this.observers.forEach(r=>{r(e)})}setupImportDefinitions(e){e.addEventListener("click",()=>{var r=prompt("Enter you data","JSON");if(r){var i=y(r);if(!i){alert("Invalid definitions. Check and try again.");return}this._reload()}})}_load(){this.persons?(this.element.innerHTML="",this.persons.forEach(e=>{const r=document.createElement("button");r.innerHTML=e.name,r.onclick=()=>this.notifyAll(e),this.element.appendChild(r)}),this.activePerson||this._setActive(this.persons[0]),this.notifyAll(this.activePerson)):this.notifyAll(null)}_reload(){this.persons=l(),this._load()}_setActive(e){this.activePerson=e}_setupButton(){this.button.addEventListener("click",()=>this._addPerson())}_addPerson(){const e=g();e&&(this.persons.push(e),this._setActive(e),this._load())}}const _=new f(document.querySelector("#board"),document.querySelector("#person-label"),document.querySelector("#warning")),u=new P(document.querySelector("#persons"),document.querySelector("#add"));u.subscribe(t=>_.build(t));u.setupImportDefinitions(document.querySelector("#import"));u.build();
